USER STORIES:
	As a user I would like to be able to log on
	As a user I would like to submit new proposals POST /proposals/new
	As a user I would like to view all proposals in order of most popular GET /proposals/
	As a user I would like to filter proposals by ones I submitted 
	As a user I would like to be able to edit a proposal POST /proposals/123
	As a user I would like to delete proposals I no longer like
	CRUD on proposals
	Create on account
	As a user I would like to be able to vote for proposals
	As a user I would like to see real time new proposals
	As a users I would like to see real time votes for new proposals
	Proposal
	Title
	Create date
	Description
	Created by 
	Votes



TO DO:
	set up Baucis for Account Model
	try to add middleware
	set up backbone Account model with Baucis API endpoints

	add connect-mongo as session store


The request gets a number of cool properties, like 
	request.ip to get the IP address
	request.files to get uploaded files.



1. SUBMIT TALK

	- once a user is signed in the submit talk button shows

	- on click of submit talk button, the submit talk form shows

	- on submit of talk, crete document in mongo, created by is session user account

	- send back success message, and close window


	C.R.U.D

	Create - submit talk

	Read - get all talks on start up

	Update, Delete only on "my talks"


STRUCTURE:

	talk module

	talks collection
	talk model

	talks composite view (table)
	talk item view (table row)
	talk emptyView 

	talk new talk view (modal)


2. My Talks area: list off talks you submitted

3. Move error messaging to constants



TO DO:

1. Add a delete talk button ( DELETE )
2. Create a mytalks area
		ability to delete
		ability to edit


		HOW:

			on click of nav bar: this.trigger( "NAV:TALK", "MINE" );
			goes to modules which triggers "APP:TALK:MINE"

		TODO:
			build a "mine" fetch which needs an endpoint /api/v1/talks/mine
			fix the styling for the personalized header
			figure out a way to add delete and edit buttons to MY talks (use itemViewOptions perhaps)


3. COULD TRY TO USE DEFERRED ACTION AND SEND TO LOGIN WHEN TRYING TO VOTE AND NOT LOGGED IN.
		click upvote
		if not logged in
		then bring up login modal
		after loggin then trigger upvote automatically
4. build sorting on columns - client side
5. build a messages module
6. move server messaging to contants file






